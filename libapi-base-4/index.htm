<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8"/>
    <title>libapi-base-4 &ndash; Vala Binding Reference</title>
    <link href="../style.css" rel="stylesheet" type="text/css"/><script src="../scripts.js" type="text/javascript">
    </script>
  </head>
  <body>
    <div class="site_header">libapi-base-4 Reference Manual</div>
    <div class="site_body">
      <div class="site_navigation">
        <ul class="navi_main">
          <li class="package_index"><a href="../index.html">Packages</a></li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="package">libapi-base-4</li>
        </ul>
        <hr class="navi_hr"/>
        <ul class="navi_main">
          <li class="namespace"><a href="ApiBase.html">ApiBase</a></li>
        </ul>
      </div>
      <div class="site_content">
        <h1 class="main_title" id="libapi-base-4">libapi-base-4</h1>
        <hr class="main_hr"/>
        <h2 class="main_title">Description:</h2>
        <h2 class="main_title">Content:</h2>
        <h3 class="main_title">Namespaces:</h3>
        <ul class="navi_inline">
          <li class="namespace"><a href="ApiBase.html">ApiBase</a></li>
          <h3 class="main_title">Classes:</h3>
          <ul class="navi_inline">
            <li class="abstract_class"><a href="ApiBase.DataObject.html">DataObject</a> - <span class="brief_description">A class with convenient 
                methods for fast de/serialization</span></li>
            <li class="class"><a href="ApiBase.Jsoner.html">Jsoner</a> - <span class="brief_description">Json helper for de/serialization</span></li>
            <li class="class"><a href="ApiBase.Request.html">Request</a> - <span class="brief_description">Request object. Can handle parameters, 
                headers, post content. <a href="ApiBase.Session.exec.html" class="method">Session.exec</a> and 
                <a href="ApiBase.Session.exec_async.html" class="method">Session.exec_async</a> form message via <span class="method">form_message
                </span> and set this to readonly</span></li>
            <li class="class"><a href="ApiBase.Session.html">Session</a> - <span class="brief_description">A wrapper class for libsoup</span></li>
          </ul>
          <h3 class="main_title">Structs:</h3>
          <ul class="navi_inline">
            <li class="struct"><a href="ApiBase.Header.html">Header</a></li>
            <li class="struct"><a href="ApiBase.Param.html">Param</a></li>
            <li class="struct"><a href="ApiBase.PostContent.html">PostContent</a></li>
          </ul>
          <h3 class="main_title">Enums:</h3>
          <ul class="navi_inline">
            <li class="enum"><a href="ApiBase.Case.html">Case</a> - <span class="brief_description">Name cases. With AUTO 
                <a href="ApiBase.Jsoner.html" class="class">Jsoner</a> will try detect name case for every member of json object. Useful for working 
                with bad API developers</span></li>
            <li class="enum"><a href="ApiBase.CookieJarType.html">CookieJarType</a> - <span class="brief_description">Type of cookie jar to create
              </span></li>
            <li class="enum"><a href="ApiBase.HttpMethod.html">HttpMethod</a></li>
            <li class="enum"><a href="ApiBase.PostContentType.html">PostContentType</a> - <span class="brief_description">Supported post content types
              </span></li>
          </ul>
          <h3 class="main_title">Error domains:</h3>
          <ul class="navi_inline">
            <li class="errordomain"><a href="ApiBase.BadStatusCodeError.html">BadStatusCodeError</a> - <span class="brief_description">Bad status 
                codes error</span></li>
            <li class="errordomain"><a href="ApiBase.JsonError.html">JsonError</a> - <span class="brief_description">Error from libjson</span></li>
            <li class="errordomain"><a href="ApiBase.SoupError.html">SoupError</a> - <span class="brief_description">Error from libsoup</span></li>
          </ul>
          <h3 class="main_title">Delegates:</h3>
          <ul class="navi_inline">
            <li class="delegate"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">delegate</span> <span class="main_keyword">void</span> <b><a href="ApiBase.SubCollectionCreationFunc.html" class="delegate">SubCollectionCreationFunc</a></b> (<span class="main_keyword">out</span> <span class="main_type"><span class="interface">Traversable</span></span> collection, <span class="main_type"><span class="struct">Type</span></span> element_type)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">A function for creating subcollections in the case of arrays in an 
                  array</span>
              </div></li>
          </ul>
          <h3 class="main_title">Methods:</h3>
          <ul class="navi_inline">
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.any2kebab.html" class="method">any2kebab</a></b> (<span class="main_basic_type"><span class="class">string</span></span> str)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Convert any case string to kebab-case</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.camel2kebab.html" class="method">camel2kebab</a></b> (<span class="main_basic_type"><span class="class">string</span></span> camel_string)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Convert `сamelCase` to `kebab-case` string</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_keyword">void</span> <b><a href="ApiBase.check_type.html" class="method">check_type</a></b> (<span class="main_type"><span class="struct">Type</span></span> type_)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Check GType on valid for using as Jsoner dataclass for 
                  de/serialization. On fail will used <span class="method">GLib.error</span></span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_type"><span class="class">HashMap</span></span>&lt;<span class="main_basic_type"><span class="class">string</span></span>,<span class="main_type"><span>T</span></span>&gt; <b><a href="ApiBase.datalist_to_hashmap.html" class="method">datalist_to_hashmap</a></b>&lt;<b><span>T</span></b>&gt; (<span class="main_type"><span class="struct">Datalist</span></span>&lt;<span class="main_type"><span>T</span></span>&gt; datalist)
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_type"><a href="ApiBase.Case.html" class="enum">Case</a></span> <b><a href="ApiBase.detect_case.html" class="method">detect_case</a></b> (<span class="main_basic_type"><span class="class">string</span></span> str)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Detect case from `str`</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="struct">int</span></span> <b><a href="ApiBase.get_enum_by_nick.html" class="method">get_enum_by_nick</a></b> (<span class="main_type"><span class="struct">Type</span></span> enum_type, <span class="main_basic_type"><span class="class">string</span></span> nick)
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.get_enum_nick.html" class="method">get_enum_nick</a></b> (<span class="main_type"><span class="struct">Type</span></span> enum_type, <span class="main_basic_type"><span class="struct">int</span></span> enum_)
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_type"><span class="struct">Datalist</span></span>&lt;<span class="main_type"><span>T</span></span>&gt; <b><a href="ApiBase.hashmap_to_datalist.html" class="method">hashmap_to_datalist</a></b>&lt;<b><span>T</span></b>&gt; (<span class="main_type"><span class="class">HashMap</span></span>&lt;<span class="main_basic_type"><span class="class">string</span></span>,<span class="main_type"><span>T</span></span>&gt; hash_map)
              </span>
              <div class="leaf_brief_description">
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.kebab2camel.html" class="method">kebab2camel</a></b> (<span class="main_basic_type"><span class="class">string</span></span> kebab_string)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Convert `kebab-case` to `сamelCase` string</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.kebab2snake.html" class="method">kebab2snake</a></b> (<span class="main_basic_type"><span class="class">string</span></span> kebab_string)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Convert `kebab-case` to `snake_case` string</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.snake2kebab.html" class="method">snake2kebab</a></b> (<span class="main_basic_type"><span class="class">string</span></span> snake_string)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Convert `snake_case` to `kebab-case` string</span>
              </div></li>
            <li class="method"><span class="leaf_code_definition"><span class="main_keyword">public</span> <span class="main_basic_type"><span class="class">string</span></span> <b><a href="ApiBase.strip.html" class="method">strip</a></b> (<span class="main_basic_type"><span class="class">string</span></span> str, <span class="main_basic_type"><span class="struct">char</span></span> ch)
              </span>
              <div class="leaf_brief_description"><span class="brief_description">Delete all <span class="struct">char</span> from start and end of 
                  <span class="class">string</span></span>
              </div></li>
          </ul>
        </ul>
      </div>
    </div><br/>
    <div class="site_footer">Generated by <a href="https://docs.vala.dev"><kbd>valadoc</kbd></a>
    </div>
  </body>
</html>